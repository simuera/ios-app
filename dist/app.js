"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const helmet_1 = __importDefault(require("helmet"));
const cors_1 = __importDefault(require("cors"));
const morgan_1 = __importDefault(require("morgan"));
const compression_1 = __importDefault(require("compression"));
const controller_1 = __importDefault(require("./api/auth/controller"));
const controller_2 = __importDefault(require("./api/user/controller"));
const controller_3 = __importDefault(require("./api/tagScan/controller"));
const requestIdMiddleware_1 = require("./middleware/requestIdMiddleware");
const errorHandler_1 = require("./middleware/errorHandler");
const rateLimiter_1 = require("./middleware/rateLimiter");
const metricsMiddleware_1 = require("./middleware/metricsMiddleware");
const logger_1 = require("./lib/logger");
const controller_4 = __importDefault(require("./api/health/controller"));
const app = (0, express_1.default)();
app.use((0, helmet_1.default)());
app.use((0, cors_1.default)({ origin: false }));
app.use(express_1.default.json({ limit: '1mb' }));
app.use(express_1.default.urlencoded({ extended: true }));
app.use((0, compression_1.default)());
app.use(requestIdMiddleware_1.requestIdMiddleware);
app.use(rateLimiter_1.apiLimiter);
app.use(metricsMiddleware_1.metricsMiddleware);
app.use((req, res, next) => { req.logger = logger_1.logger; next(); });
app.use((0, morgan_1.default)('combined', { stream: { write: (msg) => logger_1.logger.info(msg.trim()) } }));
app.use('/api/auth', controller_1.default);
app.use('/api/users', controller_2.default);
app.use('/api/tag-scans', controller_3.default);
app.get('/metrics', metricsMiddleware_1.metricsHandler);
app.use('/api/health', controller_4.default);
app.use(errorHandler_1.errorHandler);
exports.default = app;
